{"version":3,"sources":["./src/app/service/producto/producto.service.ts","./src/app/service/auth/auth.service.ts","./src/app/service/admin/users.service.ts","./src/environments/environment.ts","./src/app/pipes/filter.pipe.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/venta/venta.component.ts","./src/app/components/venta/venta.component.html","./src/app/service/venta/venta.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/prueba/prueba.component.ts","./src/app/components/prueba/prueba.component.html","./src/app/service/categoria/categoria.service.ts","./src/app/utils/base-form-user.ts","./src/app/interceptors/admin-interceptor.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/categoria/categoria.component.ts","./src/app/components/categoria/categoria.component.html","./src/app/app.module.ts","./src/app/components/ventas-info/ventas-info.component.ts","./src/app/components/ventas-info/ventas-info.component.html","./src/app/guards/auth/auth.guard.ts","./src/app/components/registro/registro.component.ts","./src/app/components/registro/registro.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/directiva/sort.directive.ts","./src/app/guards/admin/admin.guard.ts","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/usuarios/usuarios.component.ts","./src/app/components/usuarios/usuarios.component.html","./src/app/utils/base-form-generic.ts","./src/app/components/productos/productos.component.ts","./src/app/components/productos/productos.component.html","./src/app/app-routing.module.ts","./src/app/utils/sort.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Producto } from 'src/app/models/varios.interface';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductoService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Producto[]> {\n    return this.http\n    .get<Producto[]>(`${environment.API_URL}/producto`)\n    .pipe(catchError(this.handlerError))\n  }\n\n  handlerError(err): Observable<never> {\n    let errorMessage = \"Ha ocurrido un error al obtener los datos\";\n    if (err) {\n      errorMessage=`Error: \n      code -> ${err.status}\n      message -> ${err.error.message} `;\n    }\n    console.log(errorMessage);\n    Swal.fire({\n      icon:'error',\n      title:'Opps...',\n      text:err.error.message\n    });\n    return throwError(errorMessage);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { UserResponse, User } from 'src/app/models/user.interface';\nimport { environment } from '../../../environments/environment';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport Swal from 'sweetalert2';\n\nconst helper = new JwtHelperService();\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  /* private loggedIn = new BehaviorSubject<boolean>(false);\n  private role = new BehaviorSubject<Roles>(null);\n  private userToken = new BehaviorSubject<string>(null); */\n\n  private user = new BehaviorSubject<UserResponse>(null);\n\n  constructor(private http: HttpClient) {\n    this.checkToken();\n  }\n\n  /* get isLogged(): Observable<boolean> {\n    return this.loggedIn.asObservable();\n  }\n\n  get isAdmin(): Observable<string> {\n    return this.role.asObservable();\n  }\n\n  get userTokenValue(): string {\n    return this.userToken.getValue();\n  } */\n\n  get user$(): Observable<UserResponse> {\n    return this.user.asObservable();\n  }\n\n  get userValue() {\n    return this.user.getValue();\n  }\n\n  login(authData: User): Observable<UserResponse | void> {\n    return this.http\n      .post<UserResponse>(`${environment.API_URL}/auth/login`, authData)\n      .pipe(\n        map((user: UserResponse) => {\n          //console.log('RES -> ', res);          \n          this.saveLocalStorage(user);\n          /* this.loggedIn.next(true);\n          this.role.next(user.role);\n          this.userToken.next(user.token); */\n          this.user.next(user);\n          return user;\n        }),\n        catchError((err) => this.handleError(err))\n      );\n  }\n  logout(): void {\n    localStorage.removeItem('user');\n    /* this.loggedIn.next(false);\n    this.role.next(null);\n    this.userToken.next(null); */\n    this.user.next(null);\n  }\n\n  olvidoPassword(username: any): Observable<any> {\n    return this.http\n      .put<any>(`${environment.API_URL}/auth/forgot-password`, username)\n      .pipe();\n  };\n\n  register(userData: any): Observable<any> {\n    return this.http\n      .post<any>(`${environment.API_URL}/auth/register`, userData)\n      .pipe(catchError(this.handleError));\n  }\n\n  private checkToken(): void {\n    const user = JSON.parse(localStorage.getItem('user')) || null;\n    if (user) {\n      const isExpired = helper.isTokenExpired(user.token);\n      if (isExpired) {\n        this.logout()\n      } else {\n        /* this.loggedIn.next(true);\n        this.role.next(user.role);\n        this.userToken.next(user.token); */\n        this.user.next(user);\n      }\n    }\n\n    /* console.log('isExpired -> ', isExpired);\n    if (isExpired) {\n      this.logout();\n    } else {\n      this.loggedIn.next(true);\n    } */\n  }\n\n  private saveLocalStorage(user: UserResponse): void {\n    //localStorage.setItem('token', token);\n    const {message, ...rest } = user;\n    localStorage.setItem('user', JSON.stringify(rest));\n  }\n\n  private handleError(err): Observable<never> {\n    let errorMessage = \"Ha ocurrido un error al obtener los datos\";\n    if (err) {\n      //console.log(JSON.stringify(err))\n      //errorMessage = `Error: code ${err.error.message}`;\n\n      errorMessage=`Error: \n      code -> ${err.status}\n      message -> ${err.error.message} `;\n      \n      //errorMessage=`Error: code ${err.message}`;\n    }\n    console.log(errorMessage);\n    Swal.fire({\n      icon:'error',\n      title:'Opps...',\n      text:err.error.message\n    });\n    return throwError(errorMessage);\n  }\n\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { User,UserData } from 'src/app/models/user.interface';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<UserData[]> {\n    /* let customHeaders=new HttpHeaders().set('admin',adminId);\n    console.log('esto me llego:'+JSON.stringify(customHeaders)); */\n\n    return this.http\n      .get<UserData[]>(`${environment.API_URL}/users`)\n      .pipe(catchError(this.handlerError));\n  }\n\n  getById(userId: number): Observable<User> {\n    return this.http\n      .get<any>(`${environment.API_URL}/users/${userId}`)\n      .pipe(catchError(this.handlerError));\n  }\n  new(user: User): Observable<any> {\n    return this.http\n      .post<any>(`${environment.API_URL}/users`,user)\n      .pipe(catchError(this.handlerError));\n  }\n  update(userId: number, user: User): Observable<any> {\n    return this.http\n      .patch<any>(`${environment.API_URL}/users/${userId}`, user)\n      .pipe(catchError(this.handlerError));\n  }\n  delete(userId: number): Observable<any> {\n    return this.http\n      .delete<any>(`${environment.API_URL}/users/${userId}`)\n      .pipe(catchError(this.handlerError));\n  }\n\n  handlerError(err): Observable<never> {\n    let errorMessage = \"Ha ocurrido un error al obtener los datos\";\n    if (err) {\n      errorMessage=`Error: \n      code -> ${err.status}\n      message -> ${err.error.message} `;\n    }\n    console.log(errorMessage);\n    Swal.fire({\n      icon:'error',\n      title:'Opps...',\n      text:err.error.message\n    });\n    return throwError(errorMessage);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  firebaseConfig :{\r\n    apiKey: \"AIzaSyDlBjY4qeASTwPMHZnGL9tOg5bkHcyKCJA\",\r\n    authDomain: \"stockear-123.firebaseapp.com\",\r\n    databaseURL: \"https://stockear-123.firebaseio.com\",\r\n    projectId: \"stockear-123\",\r\n    storageBucket: \"stockear-123.appspot.com\",\r\n    messagingSenderId: \"144917792861\",\r\n    appId: \"1:144917792861:web:856dd83c26cc7440e6e5b4\"\r\n  },\r\n  API_URL:'http://localhost:3000',\r\n  //API_URL:'https://apistockear.herokuapp.com',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n\n  transform(value: any, arg: any, label: any): any {\n    if (arg === \"\" || arg.length < 2) return value;\n    const resultado = [];\n\n    /* En el switch lo que evaluo es el parametro label, el cual es un segundo parametro que espera recibir algun criterio que este dentro\n    de la propiedad del objeto JSON que se aplica el pipe, esta modiicacion se realizo para que este pipe pueda ser usado con varios Object JSON\n    de tipos como los que se encuentran dentro de la carpeta models, los cuales son representaciones de entidades del proyecto */\n\n    /* esta el valor default para la busqueda de los usuarios, el resto de los case se iran agregando o eliminando segun se necesiten */\n    for (const i of value) {\n      switch (label) {\n        case 'descrip': {\n          if (i.descripcion.toLowerCase().indexOf(arg.toLowerCase()) > -1) {\n            resultado.push(i);\n          }\n          break;\n        }\n        default: {\n          if (i.username.toLowerCase().indexOf(arg.toLowerCase()) > -1) {\n            resultado.push(i);\n          }\n          break;\n        }\n      }\n    }\n    return resultado;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-12 carrusel\">\r\n      <div id=\"caruselInicio\" class=\"carousel slide carousel-fade\" data-ride=\"carousel\">\r\n        <ol class=\"carousel-indicators\">\r\n          <li data-target=\"#caruselInicio\" data-slide-to=\"0\" class=\"active\"></li>\r\n          <li data-target=\"#caruselInicio\" data-slide-to=\"1\"></li>\r\n          <li data-target=\"#caruselInicio\" data-slide-to=\"2\"></li>\r\n        </ol>\r\n        <div class=\"carousel-inner\">\r\n          <div class=\"carousel-item active\">\r\n            <img src=\"../../../assets/analisis-financiero-de-una-empresa.png\" class=\"img-fluid w-100\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n              <h5>First slide label</h5>\r\n              <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img src=\"../../../assets/pngtree-cartoon-finance-report-data-image_12575.jpg\" class=\"img-fluid w-100\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n              <h5>Second slide label</h5>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"carousel-item\">\r\n            <img src=\"../../../assets/pngtree-cartoon-time-money-discuss-image_13605.jpg\" class=\"img-fluid w-100\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n              <h5>Third slide label</h5>\r\n              <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <a class=\"carousel-control-prev\" href=\"#caruselInicio\" role=\"button\" data-slide=\"prev\">\r\n          <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Previous</span>\r\n        </a>\r\n        <a class=\"carousel-control-next\" href=\"#caruselInicio\" role=\"button\" data-slide=\"next\">\r\n          <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n          <span class=\"sr-only\">Next</span>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { UserResponse } from 'src/app/models/user.interface';\nimport { Producto } from 'src/app/models/varios.interface';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { ProductoService } from 'src/app/service/producto/producto.service';\nimport { VentaService } from 'src/app/service/venta/venta.service';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-venta',\n  templateUrl: './venta.component.html',\n  styleUrls: ['./venta.component.css']\n})\nexport class VentaComponent implements OnInit {\n  prod: Producto[];\n  ventaInfo: Producto[] = [];\n  ventaF: FormGroup;\n  total: number = 0;\n\n  myArray: {\n    idProd: any[],\n    cantidad: any[],\n    adminId: number\n  } = {\n      idProd: [],\n      cantidad: [],\n      adminId: 0\n    };\n\n  filterProd='';\n\n  constructor(private productoSVC: ProductoService, private ventaSVC: VentaService, private fb: FormBuilder, private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.productoSVC.getAll().subscribe((res) => this.prod = res);\n\n    this.auth.user$.subscribe((user: UserResponse) => {\n      this.myArray.adminId = user?.adminId;\n    });\n    this.ventaF = this.fb.group({\n      prod: ['', [Validators.required, Validators.minLength(3)]],\n      cant: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  onSubmit() {\n    this.ventaInfo.push(this.ventaF.value.prod);\n\n    this.myArray.cantidad.push(this.ventaF.value.cant);\n    this.myArray.idProd.push(this.ventaF.value.prod.id);\n\n    this.total = this.total + ((this.ventaF.value.prod.costo) * (this.ventaF.value.cant));\n  }\n\n  /* ver() {\n    console.log('idProd: '+JSON.stringify(this.idProd));\n    console.log('cantidad: '+JSON.stringify(this.cantidad));\n  } */\n\n  eliminar(i: any, costo: any, cant: any) {\n    this.myArray.idProd.splice(i, 1);\n    this.myArray.cantidad.splice(i, 1);\n    this.ventaInfo.splice(i, 1);\n    this.total = this.total - (costo * cant);\n  }\n\n  confirmar() {\n    if (this.myArray.cantidad.length == this.myArray.idProd.length) {\n      //this.ventaSVC.newVenta(this.myArray).subscribe((res)=>console.log(res));\n      swal.fire({\n        title: '¿Desea realizar la venta?',\n        showDenyButton: true,\n        showCancelButton: true,\n        confirmButtonText: 'Aceptar',\n        denyButtonText: 'Atras'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          swal.fire('Realizado', '', 'success');\n        } else if (result.isDenied) {\n          swal.fire('No se realizo la venta', '', 'info');\n        }\n      })\n\n    }\n  }\n}\n","<br>\n<div class=\"col-12\">\n  <div class=\"col-sm-6 float-left card\" id=\"a\">\n    <div class=\"card-header\">\n      <h4>Productos</h4>\n    </div>\n    <div class=\"card-body\">\n      <form [formGroup]=\"ventaF\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-group\">\n          <input type=\"text\" placeholder=\"Buscar Producto\" class=\"form-control\" [(ngModel)]=\"filterProd\" [ngModelOptions]=\"{standalone: true}\">\n          <select formControlName=\"prod\" class=\"custom-select\">\n            <option [ngValue]=\"null\" selected>Seleccionar ...</option>\n            <option *ngFor=\"let p of prod | filter:filterProd:'descrip'\" [ngValue]=\"p\" >{{p.descripcion}} c/u ${{p.costo}}</option>\n          </select>\n        </div>\n        <div class=\"form-group\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n              <input type=\"number\" class=\"form-control\" placeholder=\"cantidad\" formControlName=\"cant\">\n            </div>\n            <div class=\"col-6\">\n              <button class=\"btn btn-primary\" type=\"submit\">Agregar</button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-sm-6 float-right card\" id=\"b\">\n    <div class=\"card-header\">\n      <h4>Carrito 🛒</h4>\n    </div>\n    <div class=\"card-body\">\n      <table class=\"table table-bordered table-responsive\">\n        <thead class=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Producto</th>\n            <th scope=\"col\">Cantidad</th>\n            <th scope=\"col\">Precio</th>\n            <th scope=\"col\">Sub total</th>\n            <th scope=\"col\">Acciones</th>\n          </tr>\n        </thead>\n        <tbody *ngFor=\"let item of ventaInfo;index as i\">\n          <tr>\n            <th scope=\"row\">{{item.descripcion}}</th>\n            <td>{{myArray.cantidad[i]}}</td>\n            <td>${{item.costo}}</td>\n            <td>${{(item.costo)*(myArray.cantidad[i])}}</td>\n            <td><button class=\"btn btn-sm btn-danger\"\n                (click)=\"eliminar(i,item.costo,myArray.cantidad[i])\">eliminar</button></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"card-footer\">\n      <h4 class=\"float-right\">Total: ${{total}}</h4>\n    </div>\n    <button class=\"btn btn-outline-success btn-block \" (click)=\"confirmar()\">Confirmar</button>\n    <br>\n  </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Venta, VentaDetalle } from 'src/app/models/venta.interface'\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VentaService {\n\n  constructor(private http:HttpClient) { }\n\n  getAll(): Observable<Venta[]>{\n    return this.http\n    .get<Venta[]>(`${environment.API_URL}/venta`)\n    .pipe(catchError(this.handlerError))\n  }\n\n  getById(id: number): Observable<VentaDetalle[]>{\n    return this.http\n    .get<VentaDetalle[]>(`${environment.API_URL}/venta/${id}`)\n    .pipe(catchError(this.handlerError));\n  }\n\n  newVenta(myArray:any):Observable<any>{\n    return this.http\n    .post(`${environment.API_URL}/venta`,myArray)\n    .pipe(catchError(this.handlerError));\n  }\n\n  handlerError(err): Observable<never> {\n    let errorMessage = \"Ha ocurrido un error al obtener los datos\";\n    if (err) {\n      errorMessage=`Error: \n      code -> ${err.status}\n      message -> ${err.error.message} `;\n    }\n    console.log(errorMessage);\n    Swal.fire({\n      icon:'error',\n      title:'Opps...',\n      text:err.error.message\n    });\n    return throwError(errorMessage);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Form, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-prueba',\r\n  templateUrl: './prueba.component.html',\r\n  styleUrls: ['./prueba.component.css']\r\n})\r\nexport class PruebaComponent implements OnInit {\r\n  config: any;\r\n  collection = [];\r\n  closeResult = '';\r\n  algoForm: FormGroup;\r\n  flag: boolean;\r\n  idFirebaseActual: string;\r\n\r\n  emailPattern:any=\"(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$\";\r\n  crearFormGroup(){\r\n    return new FormGroup({\r\n      mail:new FormControl('',[Validators.required,Validators.minLength(9),Validators.maxLength(57),Validators.pattern(this.emailPattern)]),\r\n      texto:new FormControl('',[Validators.required]),\r\n      fecha:new FormControl('',[Validators.required]),\r\n      numero:new FormControl('',[Validators.required,Validators.minLength(3),Validators.maxLength(8)]),\r\n      contraseña:new FormControl('',[Validators.required]),\r\n    })\r\n  }\r\n  prueba:FormGroup;\r\n\r\n  constructor(private modalService: NgbModal, public formBuilder: FormBuilder) { \r\n    this.prueba=this.crearFormGroup();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.idFirebaseActual = '';\r\n    this.flag = false;\r\n    this.algoForm = this.formBuilder.group({\r\n      id: ['', Validators.required],\r\n      nombre: ['', Validators.required],\r\n      apellido: ['', Validators.required]\r\n    });\r\n\r\n    /*\r\n    NOTA: las validaciones en elos campos tienen las siguiente forma.....\r\n\r\n    'nombreCampo':[valor,[validacionSincronica],[validacionAsincronica]]\r\n    */\r\n  }\r\n\r\n  resetForm(){\r\n    this.prueba.reset();\r\n  }\r\n\r\n  saveData(){\r\n    if(this.prueba.valid){\r\n      console.log('Valido : ',this.prueba.value());\r\n      this.resetForm();\r\n    }else{\r\n      console.log('no valido');\r\n    }\r\n  }\r\n  get mail(){return this.prueba.get('mail');}\r\n  get texto(){return this.prueba.get('texto');}\r\n  get fecha(){return this.prueba.get('fecha');}\r\n  get numero(){return this.prueba.get('numero');}\r\n  get contraseña(){return this.prueba.get('contraseña');}\r\n\r\n\r\n\r\n  eliminar(item: any): void {\r\n    /* var indice = item;\r\n    console.log('este es el indice seleccionado ' + indice);\r\n    var borrado = this.collection.data.splice(indice, 1);\r\n    console.log('se ha borrado el item ' + borrado); */\r\n  }\r\n\r\n  editarOpen(content, item: any) {\r\n    //esto llena el form\r\n    this.algoForm.setValue({\r\n      id: item.id,\r\n      nombre: item.nombre,\r\n      apellido: item.apellido\r\n    });\r\n    this.idFirebaseActual = item.idFirebase;\r\n    this.flag = true;\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n/*   editar() {\r\n    if (this.idFirebaseActual != null || this.idFirebaseActual != undefined) {\r\n      this.firebaseService.updateAlgo(this.idFirebaseActual, this.algoForm.value).then(resp => {\r\n        this.algoForm.reset();\r\n        this.modalService.dismissAll();\r\n      }).catch(error => {\r\n        console.error(error);\r\n      });\r\n    }\r\n\r\n  } */\r\n\r\n  open(content) {\r\n    this.flag = false;\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","<p>prueba de fromularios</p>\r\n<p>esto es una seccion en teoria privada</p>\r\n<div class=\"row\">\r\n    <div class=\"col-md-2\"> </div>\r\n    <div class=\"row card col-md-8\">\r\n        <form [formGroup]=\"prueba\" (ngSubmit)=\"saveData()\" novalidate>\r\n            <div class=\"form-group\">\r\n                <label>Mail: </label>\r\n                <input class=\"form-control\" formControlName=\"mail\" type=\"text\" placeholder=\"introducir un mail\">\r\n                <div *ngIf=\"mail.invalid && (mail.dirty || mail.touched)\">\r\n                    <p *ngIf=\"mail.errors.pattern\">El campo es de tipo mail</p>\r\n                </div>\r\n                <div *ngIf=\"mail.invalid && (mail.dirty || mail.touched) && mail.errors.required\">\r\n                    <p>El campo obligatorio</p>\r\n                </div>\r\n                <div *ngIf=\"mail.invalid && (mail.dirty || mail.touched) && mail.errors.minLength\">\r\n                    <p>El campo debe tener una longitud minima de 9 cracteres</p>\r\n                </div>\r\n                <div *ngIf=\"mail.invalid && (mail.dirty || mail.touched)\">\r\n                    <p *ngIf=\"mail.errors.maxLength\">El campo debe de tener un maximo de 57 caracteres</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Texto: </label>\r\n                <input class=\"form-control\" formControlName=\"texto\" type=\"text\" placeholder=\"introducir un mail\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Fecha: </label>\r\n                <input class=\"form-control\" formControlName=\"fecha\" type=\"date\" placeholder=\"introducir un mail\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Numero: </label>\r\n                <input class=\"form-control\" formControlName=\"numero\" type=\"number\" placeholder=\"introducir un mail\">\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label>Contraseña: </label>\r\n                <input class=\"form-control\" formControlName=\"mail\" type=\"text\" placeholder=\"introducir un mail\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn-primary\">Enviar</button>\r\n        </form>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Categoria } from 'src/app/models/varios.interface';\nimport { environment } from 'src/environments/environment';\nimport Swal from 'sweetalert2';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriaService {\n\n  constructor(private http: HttpClient) { }\n\n  getAll(): Observable<Categoria[]> {\n    return this.http\n      .get<Categoria[]>(`${environment.API_URL}/categoria`)\n      .pipe(catchError(this.handlerError))\n  }\n\n  getById(id: number): Observable<Categoria> {\n    return this.http\n      .get<any>(`${environment.API_URL}/categoria/${id}`)\n      .pipe(catchError(this.handlerError))\n  }\n  new(categoria: Categoria): Observable<any> {\n    return this.http\n      .post<any>(`${environment.API_URL}/categoria`, categoria)\n      .pipe(catchError(this.handlerError));\n  }\n\n  update(catId: number, categoria: Categoria): Observable<any> {\n    return this.http\n      .patch<any>(`${environment.API_URL}/categoria/${catId}`, categoria)\n      .pipe(catchError(this.handlerError));\n  }\n\n  delete(catId: number): Observable<any> {\n    return this.http\n      .delete<any>(`${environment.API_URL}/categoria/${catId}`)\n      .pipe(catchError(this.handlerError));\n  }\n\n  handlerError(err): Observable<never> {\n    let errorMessage = \"Ha ocurrido un error al obtener los datos\";\n    if (err) {\n      errorMessage = `Error: \n      code -> ${err.status}\n      message -> ${err.error.message} `;\n    }\n    console.log(errorMessage);\n    Swal.fire({\n      icon: 'error',\n      title: 'Opps...',\n      text: err.error.message\n    });\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BaseFormUser {\r\n\r\n\r\n    //private isValidEmail = /\\S+@\\S+\\.\\S+/;\r\n    private isValidEmail=/(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$/;\r\n    private isValidPassword=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])([A-Za-z\\d$@!%*?&]|[^ ]){8,15}$/;\r\n    errorMessage: null;\r\n\r\n    constructor(private fb: FormBuilder) { }\r\n    baseForm = this.fb.group({\r\n        username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]],\r\n        password: ['', [Validators.required, Validators.minLength(8),Validators.pattern(this.isValidPassword)]],\r\n        rol: ['', [Validators.required]],\r\n        nombre: ['', [Validators.required,Validators.minLength(3)]],\r\n        apellido: ['', [Validators.required,Validators.minLength(3)]]\r\n    });\r\n\r\n\r\n\r\n    isValidField(field: string): boolean {\r\n        this.getErrorMessage(field);\r\n        return (\r\n            (this.baseForm.get(field).touched || this.baseForm.get(field).dirty) &&\r\n            !this.baseForm.get(field).valid\r\n        );\r\n    }\r\n\r\n    private getErrorMessage(field: string): void {\r\n        const {errors}=this.baseForm.get(field);\r\n        if(errors){\r\n            const minLength=errors?.minLength?.requiredLength;\r\n            const messages={\r\n                required:'Debe introducir un valor',\r\n                pattern:'No es un valor valido',\r\n                minLength:`Este campo requiere un minimo de ${minLength} caracteres`\r\n            };\r\n            const errorKey =Object.keys(errors).find(Boolean);\r\n            this.errorMessage=messages[errorKey];\r\n        }\r\n    }\r\n}","import { HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../service/auth/auth.service';\r\n\r\n@Injectable()\r\nexport class AdminIntercetpor implements HttpInterceptor {\r\n\r\n    constructor(private auth: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<any> {\r\n\r\n        /* if (req.url.includes('users')) {\r\n            const authToken = this.auth.userTokenValue;\r\n            const authReq = req.clone({\r\n                setHeaders: {\r\n                    auth: authToken,\r\n                },\r\n            });\r\n            return next.handle(authReq);\r\n        } */\r\n        const userValue = this.auth.userValue;\r\n        if (userValue) {\r\n            const authReq = req.clone({\r\n                setHeaders: {\r\n                    auth: userValue.token\r\n                },\r\n                //headers:req.headers.set('admin',userValue.userId.toString())\r\n            });\r\n            return next.handle(authReq);   \r\n        }\r\n        return next.handle(req);\r\n    }\r\n}","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'stockear';\r\n}\r\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container\" style=\"text-align: center;\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <footer>\r\n    <app-footer></app-footer>\r\n</footer> -->\r\n    \r\n\r\n\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n\r\n  private isValidEmail=/(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$/;\r\n\r\n  private subscription: Subscription=new Subscription();\r\n\r\n  loginFB = this.fb.group({\r\n    username: ['',[Validators.required,Validators.pattern(this.isValidEmail)]],\r\n    password: ['',[Validators.required,Validators.minLength(8)]],\r\n  });\r\n\r\n  \r\n  olvidoForm=this.fb.group({\r\n    username:['']\r\n  });\r\n  closeResult='';\r\n\r\n  boton:boolean;\r\n\r\n  constructor( private router: Router, private auth: AuthService, private fb: FormBuilder, private modalService:NgbModal) { \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    /* const userData = {\r\n      username: 'nombre3',\r\n      password: '12345678'\r\n    };\r\n    this.auth.login(userData).subscribe(res => console.log('Login')); */\r\n    this.boton=false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onlogin(): void {\r\n    if(this.loginFB.invalid){\r\n      return;\r\n    }\r\n    const formValue = this.loginFB.value;\r\n    this.subscription.add(\r\n      this.auth.login(formValue).subscribe(res => {\r\n        if (res) {\r\n          Swal.fire({\r\n            title:'Success',\r\n            icon:'success',\r\n            position:'top-end',\r\n            text:'Bienvenido '+res.nombre+' '+res.apellido,\r\n            timer:2000\r\n          });\r\n          this.router.navigate(['']);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  getErrorMessage(field:string):string{\r\n    let message;\r\n    if(this.loginFB.get(field).errors.required){\r\n      message='Ingrese un valor';\r\n    }else{\r\n      if(this.loginFB.get(field).hasError('pattern')){\r\n        message=\"No es un email valido\"\r\n      }else{\r\n        if(this.loginFB.get(field).hasError('minlength')){\r\n          const min=this.loginFB.get(field).errors?.minlength.requiredLength;\r\n          message=`Este campo requiere un minimo de ${min} caracteres`;\r\n        }\r\n      }\r\n    }\r\n    return message;\r\n  }\r\n\r\n  isValidField(field:string):boolean{\r\n    return (\r\n      (this.loginFB.get(field).touched || this.loginFB.get(field).dirty)&&\r\n      !this.loginFB.get(field).valid\r\n    );\r\n  }\r\n\r\n  recuperar(){\r\n    //console.log(\"form olvido: \",this.olvidoForm.value);\r\n    this.auth.olvidoPassword(this.olvidoForm.value).subscribe(res=>{window.alert(res.message)});\r\n  }\r\n\r\n  open(content) {\r\n    \r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"!boton\">\r\n    <div class=\"col-md-6 mx-auto mt-5 card\">\r\n        <div class=\"card-body\">\r\n            <h1 class=\"text-center card-header\">Iniciar sesión</h1>\r\n            <form [formGroup]=\"loginFB\" (ngSubmit)=\"onlogin()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\">Nombre de Usuario</label>\r\n                    <input type=\"email\" class=\"form-control\" formControlName=\"username\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('username')\">\r\n                        {{getErrorMessage(\"username\")}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Contraseña</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('password')\">\r\n                        {{getErrorMessage(\"password\")}}\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"loginFB.invalid\" type=\"submit\"\r\n                    class=\"btn btn-primary btn-lg btn-block\">Entrar</button>\r\n                <div class=\"form-group\">\r\n                    <p class=\"mt-3\">¿No tiene una cuenta? <a [routerLink]=\"['/registro']\">Regístrese</a></p>\r\n                    <p>¿Olvido su contraseña? <a id=\"link1\" type=\"button\" (click)=\"boton=!boton\">click aqui !!!</a></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-7 mx-auto mt-5\" *ngIf=\"boton\">\r\n    <div class=\"card\">\r\n        <app-forgot-password></app-forgot-password>\r\n        <button (click)=\"boton=!boton\" class=\"btn btn-secondary btn-sm col align-self-center\" id=\"btn-forgot\">volver</button>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Categoria } from 'src/app/models/varios.interface';\nimport { CategoriaService } from 'src/app/service/categoria/categoria.service';\nimport { BaseFormGeneric } from 'src/app/utils/base-form-generic';\n\n\nenum Action {\n  EDIT = 'edit',\n  NEW = 'new'\n}\n\n@Component({\n  selector: 'app-categoria',\n  templateUrl: './categoria.component.html',\n  styleUrls: ['./categoria.component.css']\n})\nexport class CategoriaComponent implements OnInit {\n\n  categoria: Categoria[];\n  catForm: FormGroup;\n  flag: boolean;//para los cambios en los textos y botones del cuadro de dialogo\n  actionToDo = Action.NEW;//con esto defino la accion a realizar, es un texto en cuestion\n  closeResult = '';\n  idCat: any;\n  private destroy$ = new Subject<any>();\n  constructor(private catSVC: CategoriaService, private modalService: NgbModal, private formBuilder: FormBuilder, private router: Router, private baseForm: BaseFormGeneric) { }\n\n  ngOnInit(): void {\n    this.catSVC.getAll().subscribe((res) => {this.categoria = res});\n\n    this.catForm = this.formBuilder.group({\n      descripcion: ['', [Validators.required, Validators.maxLength(30), Validators.minLength(2)]]\n    });\n  }\n\n  guardar() {\n    const formValue = this.catForm.value;\n    if (this.actionToDo == Action.NEW) {\n      this.catSVC.new(formValue).subscribe((res) => {\n        if (res) {\n          window.alert(res.message);\n          this.modalService.dismissAll(res.message);\n          this.ngOnInit();\n        }\n      });\n    } else {\n      const catId = this.idCat;\n      this.catSVC.update(catId, formValue).subscribe((res) => {\n        if (res) {\n          window.alert(res.message);\n          this.modalService.dismissAll(res.message);\n          this.ngOnInit();\n        }\n      });\n    }\n  }\n\n  checkField(field: string): boolean {\n    return this.baseForm.isValidField(field);\n  }\n\n  eliminar(id: number) {\n    if (window.confirm('¿Desea Usted eliminar la categoria seleccionada?')) {\n      this.catSVC.delete(id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((res) => {\n          if (res) {\n            window.alert(res.message);\n            /* window.location.reload();\n            this.router.navigate(['usuarios']); */\n            this.ngOnInit();\n          }\n        });\n    }\n  }\n\n  //esto es para abrir el cuadro de dialogo\n  open(content, cat: any) {\n    if (cat == null) {\n      this.actionToDo = Action.NEW;\n      this.catForm.setValue({\n        descripcion: ''\n      });\n      this.idCat = null;\n      this.flag = false;\n    } else {\n      this.actionToDo = Action.EDIT;\n      this.catForm.setValue({\n        descripcion: cat?.descripcion,\n      });\n      this.idCat = cat?.id;\n      this.flag = true;\n    }\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next({});\n    this.destroy$.complete();\n  }\n\n  getErrorMessage(field: string): string {\n    let message;\n    if (this.catForm.get(field).errors.required) {\n      message = 'Ingrese un valor';\n    }\n    else {\n      if (this.catForm.get(field).hasError('minlength')) {\n        const min = this.catForm.get(field).errors?.minlength.requiredLength;\n        message = `Este campo requiere un minimo de ${min} caracteres`;\n      }\n      else {\n        if (this.catForm.get(field).hasError('maxLenght')) {\n          const max = this.catForm.get(field).errors?.maxlength.requiredLength;\n          message = `Este campo requiere un minimo de ${max} caracteres`;\n        }\n      }\n    }\n    return message;\n  }\n\n  isValidField(field: string): boolean {\n    return (\n      (this.catForm.get(field).touched || this.catForm.get(field).dirty) &&\n      !this.catForm.get(field).valid\n    );\n  }\n}\n","<br>\n<h2>Listado de las Categorias</h2>\n<button type=\"button\" class=\"btn btn-outline-success\" (click)=\"open(content,null)\">Agregar Categoria</button>\n<br>\n<br>\n<div class=\"table-responsive\">\n    <table class=\"table table-hover table-bordered\">\n        <thead class=\"thead-dark\">\n            <tr>\n                <th>Id</th>\n                <th>Descripción</th>\n                <th>Accionnes</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let c of categoria\">\n                <th scope=\"row\">{{c.id}}</th>\n                <th>{{c.descripcion}}</th>\n                <th>\n                    <div class=\"btn-group\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-warning btn-sm\" (click)=\"open(content,c)\">Editar</button>\n                        <button type=\"button\" class=\"btn btn-danger btn-sm\"(click)=\"eliminar(c.id)\">Borrar</button>\n                    </div>\n                </th>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"!flag\">Agregar Categoria</h4>\n        <h4 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"flag\">Actualizar Categoria</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form [formGroup]='catForm'>\n            <fieldset>\n                <div class=\"form-group\">\n                    <label>Descripcion</label>\n                    <input type=\"text\" formControlName=\"descripcion\" class=\"form-control\">\n                    <div class=\"invalid\" *ngIf=\"isValidField('descripcion')\">\n                        {{getErrorMessage(\"descripcion\")}}\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"guardar()\"\n            *ngIf=\"!flag\">Agregar</button>\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"guardar()\"\n            *ngIf=\"flag\">Actualizar</button>\n    </div>\n\n</ng-template>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { RegistroComponent } from './components/registro/registro.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\n\r\n//import {Routes, RouterModule}from '@angular/router';\r\n\r\nimport { UsersService } from './service/admin/users.service'\r\n\r\nimport { AuthGuard } from './guards/auth/auth.guard';\r\nimport { environment } from 'src/environments/environment';\r\nimport { PruebaComponent } from './components/prueba/prueba.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { UsuariosComponent } from './components/usuarios/usuarios.component'\r\nimport { AdminIntercetpor } from './interceptors/admin-interceptor';\r\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { FilterPipe } from './pipes/filter.pipe';\r\nimport { SortDirective } from './directiva/sort.directive';\r\nimport { VentasInfoComponent } from './components/ventas-info/ventas-info.component';\nimport { VentaComponent } from './components/venta/venta.component';\nimport { ProductosComponent } from './components/productos/productos.component';\nimport { CategoriaComponent } from './components/categoria/categoria.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\n\r\n/* const routes: Routes =[\r\n  {path:'', component:HomeComponent},\r\n  {path:'login', component:LoginComponent},\r\n  {path:'registro', component:RegistroComponent},\r\n  {path:'home', component:HomeComponent},\r\n  {path:'prueba',component:PruebaComponent,canActivate:[AuthGuard]}\r\n] */\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavbarComponent,\r\n    RegistroComponent,\r\n    LoginComponent,\r\n    PruebaComponent,\r\n    UsuariosComponent,\r\n    ForgotPasswordComponent,\r\n    FooterComponent,\r\n    FilterPipe,\r\n    SortDirective,\r\n    VentasInfoComponent,\r\n    VentaComponent,\r\n    ProductosComponent,\r\n    CategoriaComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    //RouterModule.forRoot(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    HttpClientModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    UsersService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AdminIntercetpor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  FormsModule: FormsModule;\r\n  ReactiveFormsModule: ReactiveFormsModule;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Venta, VentaDetalle } from 'src/app/models/venta.interface';\nimport { VentaService } from 'src/app/service/venta/venta.service';\n\n@Component({\n  selector: 'app-ventas-info',\n  templateUrl: './ventas-info.component.html',\n  styleUrls: ['./ventas-info.component.css']\n})\nexport class VentasInfoComponent implements OnInit {\n\n  ventas: Venta[];\n  closeResult = '';\n  ventaInfo:VentaDetalle[];\n\n  constructor(private ventaSVC: VentaService, private modalService: NgbModal) { }\n\n  ngOnInit(): void {\n    this.ventaSVC.getAll().subscribe((res) => this.ventas = res);\n  }\n\n  open(content, id: number) {\n    if(id){\n      this.ventaSVC.getById(id).subscribe((res) => this.ventaInfo=res);\n    }\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n    this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n}\n","<h1>Mis Ventas</h1>\n<div class=\"table-responsive\">\n    <table class=\"table table-bordered\">\n        <thead class=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">Id</th>\n                <th scope=\"col\">Fecha</th>\n                <th scope=\"col\">Hora</th>\n                <th scope=\"col\">Total</th>\n                <th scope=\"col\">Acciones</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let v of ventas\">\n                <th scope=\"row\">{{v.id}}</th>\n                <td>{{v.fechaVenta | date:\"dd/MM/yyyy\"}}</td>\n                <td>{{v.fechaVenta | date:\"shortTime\"}}</td>\n                <td>$ {{v.total}}</td>\n                <td>\n                    <button type=\"button\" class=\"btn btn-sm btn-info\" (click)=\"open(content,v.id)\">Ver</button>\n                </td>\n        </tbody>\n    </table>\n</div>\n\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Detalle de la venta</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <table class=\"table table-bordered\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Id</th>\n                    <th scope=\"col\">Producto</th>\n                    <th scope=\"col\">Categoria</th>\n                    <th scope=\"col\">Precio</th>\n                    <th scope=\"col\">Cantidad</th>\n                    <th scope=\"col\">Subtotal</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let i of ventaInfo\">\n                    <th scope=\"row\">{{i.ventaId}}</th>\n                    <td>{{i.producto}}</td>\n                    <td>{{i.categoria}}</td>\n                    <td>$ {{i.costo}}</td>\n                    <td>{{i.cantidad}}</td>\n                    <td>$ {{i.totalParcial}}</td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"modal-footer\">\n        <p></p>\n    </div>\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { CanActivate} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../../service/auth/auth.service';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { UserResponse } from '../../models/user.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthService,) {  }\r\n\r\n  canActivate(): Observable<boolean> {\r\n    //return this.auth.isLogged.pipe(take(1),map((islogged:boolean)=>!islogged));\r\n    return this.auth.user$.pipe(\r\n      take(1),\r\n      map((user: UserResponse) => ((user ? true : false)))\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/service/auth/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.component.html',\r\n  styleUrls: ['./registro.component.css'],\r\n  //providers:[UsuarioService],\r\n})\r\nexport class RegistroComponent implements OnInit {\r\n\r\n\r\n  private isValidEmail = /(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$/;\r\n  private isValidPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])([A-Za-z\\d$@!%*?&]|[^ ]){8,15}$/;\r\n\r\n  registerForm = this.fb.group({\r\n    username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]],\r\n    password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(this.isValidPassword)]],\r\n    nombre: ['', [Validators.required, Validators.minLength(3)]],\r\n    apellido: ['', [Validators.required, Validators.minLength(3)]],\r\n    confirmPassword: ['', [Validators.required]]\r\n  });\r\n\r\n  boton: boolean;\r\n\r\n  constructor(private router: Router, private fb: FormBuilder, private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.boton = false;\r\n  }\r\n  onRegister() {\r\n    if (this.registerForm.invalid) {\r\n      return;\r\n    }\r\n    this.auth.register(this.registerForm.value).subscribe(res => {\r\n      if (res) {\r\n        //window.alert(res.message);\r\n        Swal.fire({\r\n          title: 'Success',\r\n          text: res.message,\r\n          icon: 'success'\r\n        })\r\n        this.registerForm.reset();\r\n        this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n  getErrorMessage(field: string): string {\r\n    let message;\r\n    if (this.registerForm.get(field).errors.required) {\r\n      message = 'Ingrese un valor';\r\n    } else {\r\n      if (this.registerForm.get(field).hasError('pattern')) {\r\n        message = \"Ingrese un valor Valido\";\r\n      } else {\r\n        if (this.registerForm.get(field).hasError('minlength')) {\r\n          const min = this.registerForm.get(field).errors?.minlength.requiredLength;\r\n          message = `Este campo requiere un minimo de ${min} caracteres`;\r\n        }\r\n      }\r\n    }\r\n    return message;\r\n  }\r\n\r\n  isValidField(field: string): boolean {\r\n    return (\r\n      (this.registerForm.get(field).touched || this.registerForm.get(field).dirty) &&\r\n      !this.registerForm.get(field).valid\r\n    );\r\n  }\r\n\r\n}\r\n","<div class=\"row\" *ngIf=\"!boton\">\r\n    <div class=\"col-md-6 mx-auto mt-5 card\">\r\n        <div class=\"card-body\">\r\n            <h1 class=\"text-center card-header\">Registro</h1>\r\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onRegister()\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"email\">Correo electrónico</label>\r\n                    <input type=\"email\" class=\"form-control\" formControlName=\"username\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('username')\">\r\n                        {{getErrorMessage(\"username\")}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"nombre\">Nombre</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"nombre\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('nombre')\">\r\n                        {{getErrorMessage(\"nombre\")}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"apellido\">Apellido</label>\r\n                    <input type=\"text\" class=\"form-control\" formControlName=\"apellido\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('apellido')\">\r\n                        {{getErrorMessage(\"apellido\")}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"password\">Contraseña</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"password\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('password')\">\r\n                        {{getErrorMessage(\"password\")}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"confirmPassword\">Confirmar Contraseña</label>\r\n                    <input type=\"password\" class=\"form-control\" formControlName=\"confirmPassword\">\r\n                    <div class=\"invalid\" *ngIf=\"isValidField('confirmPassword')\">\r\n                        {{getErrorMessage(\"confirmPassword\")}}\r\n                    </div>\r\n                </div>\r\n                <button [disabled]=\"registerForm.invalid\" type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Registrarse</button>\r\n                <div class=\"form-group\">\r\n                    <p class=\"mt-3\">¿Tiene una cuenta? <a [routerLink]=\"['/login']\">Ingrese</a></p>\r\n                    <p>¿Olvido su contraseña? <a id=\"link1\" type=\"button\" (click)=\"boton=!boton\">click aqui !!!</a></p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"col-md-7 mx-auto mt-5\" *ngIf=\"boton\">\r\n    <div class=\"card\">\r\n        <app-forgot-password></app-forgot-password>\r\n        <button (click)=\"boton=!boton\" class=\"btn btn-secondary btn-sm col align-self-center\" id=\"btn-forgot\">volver</button>\r\n    </div>\r\n</div>","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/service/auth/auth.service';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { UserResponse } from 'src/app/models/user.interface';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  isAdmin = null;\r\n  isLogged = null;\r\n  userD=[];\r\n  @Output() toggleSidenav = new EventEmitter<void>();\r\n\r\n  //private subscription: Subscription = new Subscription();\r\n  private destroy$ = new Subject<any>();\r\n\r\n  constructor( private router: Router, public auth: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    /* this.subscription.add(\r\n      this.auth.isLogged.subscribe((res) => (this.isLogged = res))\r\n    ); */\r\n    //la de abajo es la ultima que se uso\r\n    /*  this.auth.isLogged.pipe(takeUntil(this.destroy$))\r\n       .subscribe((res) => (this.isLogged = res));\r\n \r\n     this.auth.isAdmin.pipe(takeUntil(this.destroy$))\r\n       .subscribe(res => this.isAdmin = res); */\r\n\r\n    this.auth.user$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe((user:UserResponse) => {\r\n        this.isLogged = true;\r\n        this.isAdmin = user?.role;\r\n        this.userD[0]=user?.nombre;\r\n        this.userD[1]=user?.apellido;\r\n      });\r\n  }\r\n\r\n  ngOndestroy(): void {\r\n    //this.subscription.unsubscribe();\r\n    this.destroy$.next({});\r\n    this.destroy$.complete();\r\n  }\r\n  //esto es para cuando se implemente una barra de menu en el lateral\r\n  async sidenav() {\r\n    this.toggleSidenav.emit();\r\n  }\r\n\r\n  onLogout() {\r\n    this.auth.logout();\r\n    this.router.navigate(['/']);\r\n    /* this.isAdmin=null;\r\n    this.isLogged=null; */\r\n  }\r\n}\r\n","<!-- <span > {{isAdmin}} </span>\r\n<span *ngIf=\"auth.user$ | async\"> Estas logeado </span> -->\r\n<nav class=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n  <a class=\"navbar-brand\" href=\"#\">StockeAr</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\r\n    aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n    <ul class=\"navbar-nav\" *ngIf=\"auth.user$ | async as user; else login\">\r\n      <!-- <li class=\"nav-item\">\r\n        <a class=\"nav-link\">Bienvenid@: {{userD[0]}} {{userD[1]}}</a>\r\n      </li> -->\r\n      <!-- <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" routerLink=\"/\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li> -->\r\n      <!-- <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/prueba\">Prueba</a>\r\n      </li> -->\r\n      <li *ngIf=\"isAdmin=='admin'\" class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuLink\" role=\"button\" data-toggle=\"dropdown\"\r\n          aria-haspopup=\"true\" aria-expanded=\"false\">Empleados</a>\r\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\r\n          <a class=\"dropdown-item nav-item \" routerLink=\"usuarios\">Listado</a>\r\n          <a class=\"dropdown-item\" href=\"#\">Ventas</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"productos\">Productos</a>\r\n      </li>\r\n      <li *ngIf=\"isAdmin=='admin'\" class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"categoria\">Categorias</a>\r\n      </li>\r\n      <li class=\"nav-item dropdown\">\r\n        <a class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" id=\"navbarDropdownMenuLink\" role=\"button\"\r\n          aria-haspopup=\"true\" aria-exp=\"false\">Ventas</a>\r\n        <div class=\"dropdown-menu\">\r\n          <a class=\"dropdown-item nav-item \" routerLink=\"venta-info\">Mis ventas</a>\r\n          <a class=\"dropdown-item nav-item \" routerLink=\"venta\">Realizar venta</a>\r\n        </div>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" routerLink=\"/\" (click)=\"onLogout()\">Salir</a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ng-template #login>\r\n      <ul class=\"navbar-nav \">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/login\">Ingresar</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-item nav-link\" routerLink=\"/registro\">Registrarse</a>\r\n        </li>\r\n      </ul>\r\n    </ng-template>\r\n    <ng-template #viewAdmin>\r\n      <!-- Aqui va a ir el menu para los administradores el cual estara por debajo del navbar y a la izquierda del contenido -->\r\n    </ng-template>\r\n  </div>\r\n</nav>","import { Directive, ElementRef, HostListener, Input, Renderer2 } from '@angular/core';\nimport { Sort } from '../utils/sort';\n\n@Directive({\n  selector: '[appSort]'\n})\nexport class SortDirective {\n\n  @Input() appSort: Array<any>;\n  constructor(private renderer: Renderer2, private targetElem: ElementRef) { }\n\n  @HostListener(\"click\")\n  sortData() {\n    const sort = new Sort();\n\n    const elem = this.targetElem.nativeElement;\n\n    const order = elem.getAttribute(\"data-order\");\n\n    const type = elem.getAttribute(\"data-type\");\n\n    const property = elem.getAttribute(\"data-name\");\n\n    if (order === \"desc\") {\n      this.appSort.sort(sort.startSort(property, order, type));\n      elem.setAttribute(\"data-order\", \"asc\");\n    } else {\n      this.appSort.sort(sort.startSort(property, order, type));\n      elem.setAttribute(\"data-order\", \"desc\");\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { UserResponse } from 'src/app/models/user.interface';\nimport { AuthService } from 'src/app/service/auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private auth: AuthService,) {  }\n\n  canActivate(): Observable<boolean> {\n    //return this.auth.isLogged.pipe(take(1),map((islogged:boolean)=>!islogged));\n    return this.auth.user$.pipe(\n      take(1),\n      map((user: UserResponse) => ((user ? true : false)&&((user.role==\"admin\") ? true:false)))\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/service/auth/auth.service';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  private isValidEmail = /(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$/;\n\n\n  olvidoForm = this.fb.group({\n    username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]]\n  })\n  constructor(private auth: AuthService, private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    if (this.olvidoForm.invalid) {\n      return;\n    }\n    this.auth.olvidoPassword(this.olvidoForm.value)\n      .subscribe(\n        res => {\n          if(res){\n            window.alert(res.message);\n            this.olvidoForm.reset();\n          }\n        }\n      );\n  }\n\n\n  getErrorMessage(field: string): string {\n    let message;\n    if (this.olvidoForm.get(field).errors.required) {\n      message = 'Ingrese un valor';\n    } else {\n      if (this.olvidoForm.get(field).hasError('pattern')) {\n        message = \"No es un email valido\"\n      }\n    }\n    return message;\n  }\n\n  isValidField(field: string): boolean {\n    return (\n      (this.olvidoForm.get(field).touched || this.olvidoForm.get(field).dirty) &&\n      !this.olvidoForm.get(field).valid\n    );\n  }\n}\n","<h5 class=\"card-header\">Recupere su contraseña</h5>\n<div class=\"card-body\">\n  <form [formGroup]=\"olvidoForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input type=\"email\" class=\"form-control\" formControlName=\"username\" placeholder=\"ingrese su email\">\n      <div class=\"invalid\" *ngIf=\"isValidField('username')\">\n        {{getErrorMessage(\"username\")}}\n      </div>\n    </div>\n    <button [disabled]=\"olvidoForm.invalid\" type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Recuperar</button>\n  </form>\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ModalDismissReasons, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { UserData } from 'src/app/models/user.interface';\nimport { UsersService } from 'src/app/service/admin/users.service';\nimport { AuthService } from 'src/app/service/auth/auth.service';\nimport { BaseFormUser } from 'src/app/utils/base-form-user';\nimport { UserResponse } from '../../models/user.interface';\n\nenum Action {\n  EDIT = 'edit',\n  NEW = 'new'\n}\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styleUrls: ['./usuarios.component.css']\n})\nexport class UsuariosComponent implements OnInit, OnDestroy {\n  variable: UserData[];//aqui guardo los usuarios que vienen de mi api\n  userForm: FormGroup;//esto es para el formulario\n  flag: boolean;//para los cambios en los textos y botones del cuadro de dialogo\n  closeResult = '';//esto es algo defaul del cuadro de dialogo\n  idUser: any;//aqui recupero el id del usuario seleccionado\n\n  filterUser = '';\n\n  actionToDo = Action.NEW;//con esto defino la accion a realizar, es un texto en cuestion\n\n  private destroy$ = new Subject<any>();\n  adminId: any;\n\n  aux: any;\n\n  private isValidEmail = /(^\\w{2,15}\\.?\\w{1,15})\\@(\\w{2,15}\\.[a-zA-Z]{2,10})$/;\n  private isValidPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])([A-Za-z\\d$@!%*?&]|[^ ]){8,15}$/;\n\n  constructor(private userSVC: UsersService, private modalService: NgbModal, public formBuilder: FormBuilder, public userF: BaseFormUser, private router: Router, public auth: AuthService) {\n  }\n\n  ngOnInit(): void {\n    //this.userSVC.getAll().subscribe((res) => console.log('User: ', res));\n\n    this.userSVC.getAll().subscribe((res) => this.variable = res);\n    this.userForm = this.formBuilder.group({\n      username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]],\n      rol: ['', [Validators.required]],\n      password: ['', [Validators.required, Validators.pattern(this.isValidPassword)]],\n      nombre: ['', [Validators.required]],\n      apellido: ['', [Validators.required]]\n    });\n\n    this.auth.user$.subscribe((user: UserResponse) => {\n      this.adminId = user?.userId;\n    })\n  }\n\n  guardar() {\n    const formValue = this.userForm.value;\n    if (this.actionToDo == Action.NEW) {\n      this.userSVC.new(formValue).subscribe((res) => {\n        if (res) {\n          window.alert(res.message);\n          this.modalService.dismissAll(res.message);\n          this.ngOnInit();\n        }\n      });\n    } else {\n      const userId = this.idUser;\n      this.userSVC.update(userId, formValue).subscribe((res) => {\n        if (res) {\n          window.alert(res.message);\n          /* window.location.reload();\n          this.router.navigate(['usuarios']); */\n          this.modalService.dismissAll(res.message);\n          this.ngOnInit();\n        }\n      });\n    }\n  }\n\n  checkField(field: string): boolean {\n    return this.userF.isValidField(field);\n  }\n\n  eliminar(id: number) {\n    if (window.confirm('¿Desea Usted eliminar el usuario seleccionado?')) {\n      this.userSVC.delete(id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe((res) => {\n          if (res) {\n            window.alert(res.message);\n            /* window.location.reload();\n            this.router.navigate(['usuarios']); */\n            this.ngOnInit();\n          }\n        });\n    }\n  }\n\n  //esto es para abrir el cuadro de dialogo\n  open(content, user: any) {\n    if (user == null) {\n      this.actionToDo=Action.NEW;\n      this.userForm.setValue({\n        username: '',\n        rol: '',\n        password: '',\n        nombre: '',\n        apellido: ''\n      });\n      this.idUser = null;\n      this.flag = false;\n    } else {\n      this.actionToDo = Action.EDIT;\n      this.userForm.setValue({\n        username: user?.username,\n        rol: user?.rol,\n        password: '',\n        nombre: user?.nombre,\n        apellido: user?.apellido\n      });\n      this.idUser = user?.id;\n      this.flag = true;\n    }\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\n      this.closeResult = `Closed with: ${result}`;\n    }, (reason) => {\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    });\n  }\n  private getDismissReason(reason: any): string {\n    if (reason === ModalDismissReasons.ESC) {\n      return 'by pressing ESC';\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n      return 'by clicking on a backdrop';\n    } else {\n      return `with: ${reason}`;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next({});\n    this.destroy$.complete();\n  }\n\n  getErrorMessage(field: string): string {\n    let message;\n    if (this.userForm.get(field).errors.required) {\n      message = 'Ingrese un valor';\n    } else {\n      if (this.userForm.get(field).hasError('pattern')) {\n        message = \"Ingrese un valor Valido\";\n      } else {\n        if (this.userForm.get(field).hasError('minlength')) {\n          const min = this.userForm.get(field).errors?.minlength.requiredLength;\n          message = `Este campo requiere un minimo de ${min} caracteres`;\n        }\n      }\n    }\n    return message;\n  }\n\n  isValidField(field: string): boolean {\n    return (\n      (this.userForm.get(field).touched || this.userForm.get(field).dirty) &&\n      !this.userForm.get(field).valid\n    );\n  }\n\n}\n","<br>\n<h2>Listado de Empleados</h2>\n<div class=\"table\">\n    <button type=\"button\" class=\"btn btn-outline-success btn-lg\" (click)=\"open(content,null)\">Agregar un nuevo\n        Usuario</button>\n    <div class=\"col-12\">\n        <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" name=\"filterUser\" placeholder=\"Buscar....\" [(ngModel)]=\"filterUser\">\n        </div>\n    </div>\n</div>\n<div class=\"table-responsive\">\n    <table class=\"table table-bordered table-hover\">\n        <thead class=\"thead-dark\">\n            <tr>\n                <th scope=\"col\" [appSort]=\"variable\" data-order=\"desc\" data-name=\"id\">id</th>\n                <th scope=\"col\" [appSort]=\"variable\" data-order=\"desc\" data-name=\"username\">username</th>\n                <th scope=\"col\" [appSort]=\"variable\" data-order=\"desc\" data-name=\"nombre\">nombre</th>\n                <th scope=\"col\" [appSort]=\"variable\" data-order=\"desc\" data-name=\"apellido\">apellido</th>\n                <th scope=\"col\" [appSort]=\"variable\" data-order=\"desc\" data-name=\"rol\">rol</th>\n                <th scope=\"colgroup\">Accciones</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of variable | filter:filterUser\">\n                <th scope=\"row\">{{item.id}}</th>\n                <td>{{item.username}}</td>\n                <td>{{item.nombre}}</td>\n                <td>{{item.apellido}}</td>\n                <td>{{item.rol}}</td>\n                <td>\n                    <div class=\"btn-group\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-warning btn-sm\"\n                            (click)=\"open(content,item)\">Modificar</button>\n                        <button type=\"button\" class=\"btn btn-danger btn-sm\"\n                            (click)=\"eliminar(item.id)\">Eliminar</button>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<!-- <div>{{variable | json}}</div> -->\n\n<ng-template #content let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"!flag\">Agregar Usuario</h4>\n        <h4 class=\"modal-title\" id=\"modal-basic-title\" *ngIf=\"flag\">Actualizar Usuario</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <form [formGroup]='userForm'>\n            <fieldset>\n                <div class=\"form-group\">\n                    <label>Username </label>\n                    <input type=\"text\" formControlName=\"username\" class=\"form-control\">\n                    <div class=\"invalid\" *ngIf=\"isValidField('username')\">\n                        {{getErrorMessage(\"username\")}}\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Nombre </label>\n                    <input type=\"text\" formControlName=\"nombre\" class=\"form-control\">\n                    <div class=\"invalid\" *ngIf=\"isValidField('nombre')\">\n                        {{getErrorMessage(\"nombre\")}}\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Apellido </label>\n                    <input type=\"text\" formControlName=\"apellido\" class=\"form-control\">\n                    <div class=\"invalid\" *ngIf=\"isValidField('apellido')\">\n                        {{getErrorMessage(\"apellido\")}}\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label>Rol </label>\n                    <input type=\"text\" formControlName=\"rol\" class=\"form-control\">\n                    <span *ngIf=\"checkField('rol')\">{{userF.errorMessage}}</span>\n                </div>\n                <div class=\"form-group\" *ngIf=\"actionToDo === 'new'\">\n                    <label>Password </label>\n                    <input type=\"password\" formControlName=\"password\" class=\"form-control\">\n                    <div class=\"invalid\" *ngIf=\"isValidField('password')\">\n                        {{getErrorMessage(\"password\")}}\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"guardar()\"\n            *ngIf=\"!flag\">Agregar</button>\n        <button type=\"button\" class=\"btn btn-primary btn-lg btn-block\" (click)=\"guardar()\"\n            *ngIf=\"flag\">Actualizar</button>\n    </div>\n    {{userF.baseForm.status}} status\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class BaseFormGeneric {\r\n\r\n    errorMessage: null;\r\n\r\n    constructor(private fb: FormBuilder) { }\r\n    baseForm = this.fb.group({\r\n        descripcion: ['', Validators.required, Validators.minLength(3), Validators.maxLength(30)]\r\n    });\r\n\r\n    isValidField(field: string): boolean {\r\n        this.getErrorMessage(field);\r\n        return (\r\n            (this.baseForm.get(field).touched || this.baseForm.get(field).dirty) &&\r\n            !this.baseForm.get(field).valid\r\n        );\r\n    }\r\n\r\n    private getErrorMessage(field: string): void {\r\n        const { errors } = this.baseForm.get(field);\r\n        if (errors) {\r\n            const minLength = errors?.minLength?.requiredLength;\r\n            const maxLength=errors?.maxLength?.requiredLength;\r\n            const messages = {\r\n                required: 'Debe introducir un valor',\r\n                minLength: `Este campo requiere un minimo de ${minLength} caracteres`,\r\n                maxLength:`Este campo requiere un maximo de ${maxLength} caracteres`\r\n            };\r\n            const errorKey = Object.keys(errors).find(Boolean);\r\n            this.errorMessage = messages[errorKey];\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Producto } from 'src/app/models/varios.interface';\nimport { ProductoService } from 'src/app/service/producto/producto.service';\n\n@Component({\n  selector: 'app-productos',\n  templateUrl: './productos.component.html',\n  styleUrls: ['./productos.component.css']\n})\nexport class ProductosComponent implements OnInit {\n\n  productos:Producto[];\n\n  constructor(private prodSVC:ProductoService) { }\n\n  ngOnInit(): void {\n    this.prodSVC.getAll().subscribe((res)=>{this.productos=res;console.log(res)});\n  }\n\n}\n","<div class=\"container\">\n  <br>\n  <p>productos works!</p>\n  <div class=\"row\">\n    <div class=\"col-sm\" *ngFor=\"let item of productos; index as i\">\n      <br>\n      <div class=\"card\">\n        <img src=\"assets/chems.jpg\" class=\"card-img-top\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">{{item.descripcion}}</h5>\n          <ul class=\"list-group\">\n            <li class=\"card-text list-group-item\">Precio: ${{item.costo}}</li>\n            <li class=\"card-text list-group-item\">Cantidad: {{item.cantidad}}</li>\n            <li class=\"card-text list-group-item\">Min. Existencia: {{item.minExistencia}}</li>\n            <li class=\"card-text list-group-item\">Categoria: {{item.categoria.descripcion}}</li>\n          </ul>\n          <br>\n          <div class=\"btn-group\" role=\"group\">\n            <button class=\"btn btn-warning btn-sm\">Editar</button>\n            <button class=\"btn btn-danger btn-sm\">Eliminar</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthGuard } from './guards/auth/auth.guard';\r\nimport { AdminGuard } from './guards/admin/admin.guard'\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { RegistroComponent } from './components/registro/registro.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { PruebaComponent } from './components/prueba/prueba.component';\r\nimport { UsuariosComponent } from './components/usuarios/usuarios.component';\r\nimport { VentasInfoComponent } from './components/ventas-info/ventas-info.component';\r\nimport { VentaComponent } from './components/venta/venta.component'\r\nimport { ProductosComponent } from './components/productos/productos.component';\r\nimport { CategoriaComponent } from './components/categoria/categoria.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', component: HomeComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'registro', component: RegistroComponent },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'prueba', component: PruebaComponent, canActivate: [AuthGuard] },\r\n  { path: 'usuarios', component: UsuariosComponent, canActivate: [AuthGuard, AdminGuard] },\r\n  { path: 'venta-info', component: VentasInfoComponent, canActivate: [AuthGuard] },\r\n  { path: 'venta', component: VentaComponent, canActivate: [AuthGuard] },\r\n  { path: 'productos', component: ProductosComponent, canActivate: [AuthGuard] },\r\n  { path: 'categoria', component: CategoriaComponent, canActivate: [AuthGuard, AdminGuard] },\r\n  { path: '**', redirectTo: 'home' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export class Sort{\r\n    private sortOrder=1;\r\n    private collator=new Intl.Collator(undefined,{\r\n        numeric:true,\r\n        sensitivity:\"base\"\r\n    });\r\n\r\n    constructor(){}\r\n\r\n    public startSort(property,order,type=\"\"){\r\n        if(order===\"desc\"){\r\n            this.sortOrder=-1;\r\n        }\r\n        return (a,b)=>{\r\n            if(type===\"date\"){\r\n                return this.sortData(new Date (a[property]),new Date(b[property]));\r\n            }else{\r\n                return this.collator.compare(a[property],b[property])*this.sortOrder;\r\n            }\r\n        }\r\n    }\r\n\r\n    private sortData(a,b){\r\n        if(a<b){\r\n            return -1*this.sortOrder;\r\n        }else{\r\n            if(a>b){\r\n                return 1*this.sortOrder;\r\n            }\r\n            else{\r\n                return 0*this.sortOrder;\r\n            }\r\n        }\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}